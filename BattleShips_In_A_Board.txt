class Solution {
public:
    int countBattleships(vector<vector<char>>& board) 
    {
        int m=board.size();
        int n=board[0].size();
        vector<vector<bool>> visited(m,vector<bool>(n,false));
        int count=0;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(board[i][j]=='X' && visited[i][j]==false)
                {
                    count++;
                    dfs(board,m,n,visited,i,j);
                }
            }
        }
        return count;
        
    }
    void dfs(vector<vector<char>> &board,int m,int n,vector<vector<bool>> &visited,int i,int j)
    {
        if(i<0 || i>=m || j<0 || j>=n || visited[i][j]==true || board[i][j]=='.')
            return;
        visited[i][j]=true;
        dfs(board,m,n,visited,i+1,j);
        dfs(board,m,n,visited,i-1,j);
        dfs(board,m,n,visited,i,j+1);
        dfs(board,m,n,visited,i,j-1);
        
    }
};