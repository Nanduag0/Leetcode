class Solution {
public:
    vector<vector<int>> generateMatrix(int n)
    {
        int sr=0,er=n-1,sc=0,ec=n-1;
        vector<vector<int>> ans;
        vector<int> a;
        int k=1;
        int direc=0;
        vector<vector<int>> matrix(n,vector<int>(n,0));
        while(sr<=er && sc<=ec)
        {
          if(direc==0)
          {
             for(int i=sc;i<=ec;i++)
          {
              //cout<<k<<" ";
              matrix[sr][i]=k;
              k++;
          }
              sr++;
          }
          
          if(direc==1)
          {
            for(int i=sr;i<=er;i++)
          {
              //cout<<k<<" ";
              matrix[i][ec]=k;
              k++;
          } 
              ec--;
          }
           
             if(direc==2)
             {
             for(int i=ec;i>=sc;i--)
              {
               // cout<<k<<" ";
                matrix[er][i]=k;
                k++;
              }
             er--;
             }
          
             if(direc==3)
             { 
                 for(int i=er;i>=sr;i--)
              {
               // cout<<k<<" ";
                matrix[i][sc]=k;
                k++;
              }
                sc++; 
             }
           direc=(direc+1)%4;
        }
        for(int i=0;i<matrix.size();i++)
        {
            vector<int> a;
            for(int j=0;j<matrix[0].size();j++)
            {
                a.push_back(matrix[i][j]);
            }
            ans.push_back(a);
        }
        return ans;
        
    }
};s