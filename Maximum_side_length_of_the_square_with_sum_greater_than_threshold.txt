class Solution {
public:
    int maxSideLength(vector<vector<int>>& mat, int threshold) 
    {
        //created the prefix sum 
        int n=mat.size();
        int m=mat[0].size();
        vector<vector<int>> dp(mat.size(),vector<int>(mat[0].size(),0));
        dp[0][0]=mat[0][0];
        for(int i=1;i<mat.size();i++)
        {
            dp[i][0]=mat[i][0]+dp[i-1][0];
        }
        for(int i=1;i<mat[0].size();i++)
        {
            dp[0][i]=mat[0][i]+dp[0][i-1];
        }
        for(int i=1;i<mat.size();i++)
        {
            for(int j=1;j<mat[0].size();j++)
            {
                dp[i][j]=dp[i-1][j]+dp[i][j-1]-dp[i-1][j-1]+mat[i][j];
            }
        }
        int cnt=0,mid=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                for(int k=0;i+k<n;k++)
                {
                    if(j+k<m)
                    {
                        int s1=i>0?dp[i-1][j+k]:0;
                        int s2=j>0?dp[i+k][j-1]:0;
                        int s3=i>0 && j>0 ?dp[i-1][j-1]:0;
                        int sum=dp[i+k][j+k]-s1-s2+s3;
                        if(sum<=threshold && k+1>cnt)
                            cnt=k+1;
                    }
                }
            }
        }
        return cnt;
    }
  
};