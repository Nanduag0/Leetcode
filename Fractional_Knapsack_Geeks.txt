bool cmp(Item a ,Item b)
    {
        double r1=(double)a.value/(double)a.weight;
        double r2=(double)b.value/(double)b.weight;
        return (r1>r2);
        
    }
    
class Solution
{
    
    public:
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n)
    {
        sort(arr,arr+n,cmp);
        double finalweight=0.0;
        int currweight=0;
        for(int i=0;i<n;i++)
        {
            if(arr[i].weight<=W)
            {
             finalweight+=arr[i].value;
             W-=arr[i].weight;
            }
            else
            {
                
                finalweight+=(arr[i].value*(double(W)/double(arr[i].weight)));
                break;
            }
        }
        return finalweight;
        
        // Your code here
    }
        
};