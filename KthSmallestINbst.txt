class Solution{
  public:
    // Return the Kth smallest element in the given BST 
    int KthSmallestElement(Node *root, int K)
    {
        //add code here.
        priority_queue<int,vector<int>,greater<int>> ss;
        queue<Node*> que;
        que.push(root);
        ss.push(root->data);
        while(!que.empty())
        {
            int x=que.size();
            while(x!=0)
            {
                Node *p=que.front();
                que.pop();
                if(p->left!=NULL)
                {
                    que.push(p->left);
                    ss.push(p->left->data);
                }
                if(p->right!=NULL)
                {
                    que.push(p->right);
                    ss.push(p->right->data);
                }
                x--;
            }
        }
        if(ss.size()<K)
        return -1;
        K=K-1;
        while(K--)
        {
            ss.pop();
        }
        return ss.top();
        
    }
};