int precedence(char optor)
{
  if(optor=='+')
  return 1;
  else
  if(optor=='-')
  return 1 ;
  else if(optor=='*')
  return 2 ;
  else
  return 2;
}
int operation (int v1,int v2,char optor)
{
 if(optor=='+')
 return v1+v2;
 else
 if(optor=='-') 
 return v1-v2;
 else
 if(optor=='*')
 return v1*v2;
 else 
 if(optor=='/')
 return v1/v2;
}
void main()
{
  stack<char> optor;
  stack<int> oprd;
  for(int i=0;i<exp.length();i++)
 {
   char ch=exp[i];
   if(ch=='('')
   {
    oprd.push(ch);
   }
  else
  if( ch==')')
   {
     while(optor.top()!='(')
  {
    char optor=optor.pop();
    int v1=oprd.pop();
    int v2=oprd.pop();
    int val = operation(v1,v2.optor);
    oprd.push(val);

   }
  else
   if(ch>='0' && ch<='9')
  {
   oprd.push(ch);
  }
  else
  if(ch=='+' || ch=='-' || ch=='*' || ch=='/')
  {
   while(optor.size()>0 || optor.top()!='(' || precedence(ch)<=precedence(optor.pop()))
  {
    char optor=optor.pop();
    int v1=oprd.pop();
    int v2=oprd.pop();
    int val = operation(v1,v2.optor);
    oprd.push(val);
   
  }
  optors.push(ch);

  }
   while(optor.size()!=0)
  {
    char optor=optor.pop();
    int v1=oprd.pop();
    int v2=oprd.pop();
    int val = operation(v1,v2.optor);
    oprd.push(val);

   }
  }
   return oprd.top();
  }