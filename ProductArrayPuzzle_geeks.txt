vector<long long int> productExceptSelf(vector<long long int>& nums, int n)
{
    vector<long long int> proleft(nums.size());
    vector<long long int> proright(nums.size());
    vector<long long int> ans(nums.size());
    long long int pro=1;
    if(nums.size()==1)
    {
        ans[0]=1;
        return ans;
        
    }
    for(int i=0;i<nums.size();i++)
    {
        pro*=nums[i];
        proleft[i]=pro;
    }
    pro=1;
    for(int i=nums.size()-1;i>=0;i--)
    {
        pro*=nums[i];
        proright[i]=pro;
    }
    for(int i=0;i<nums.size();i++)
    {
        if(i==0)
        ans[i]=proright[i+1];
        else
        if(i==nums.size()-1)
        ans[i]=proleft[nums.size()-2];
        else
        ans[i]=proright[i+1]*proleft[i-1];
    }
    return ans;
    //code here        
}
