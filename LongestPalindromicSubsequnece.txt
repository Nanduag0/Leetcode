public:
    int longestPalindromeSubseq(string s) 
    {
        string t;
        for(int i=s.length()-1;i>=0;i--)
        {
            t+=s[i];
        }
        int dp[s.length()+1][t.length()+1];
        for(int i=0;i<=s.length();i++)
        {
            for(int j=0;j<=t.length();j++)
            {
                if(i==0 || j==0)
                {
                    dp[i][j]=0;
                }
            }
        }
        for(int i=1;i<=s.length();i++)
        {
            for(int j=1;j<=t.length();j++)
            {
                if(s[i-1]==t[j-1])
                {
                    dp[i][j]=1+dp[i-1][j-1];
                }
                else
                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
                }
        }
        return dp[s.length()][t.length()];
       
    }
};