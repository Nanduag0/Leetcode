/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    //int inordersuccessor(TreeNode* root);
    //int inorderprecessor(TreeNode* root);
public:
    TreeNode* deleteNode(TreeNode* root, int key) 
    {
      if(root==NULL)
          return NULL;
        if(key>root->val)
            root->right=deleteNode(root->right,key);
        else
        if(key<root->val)
            root->left=deleteNode(root->left,key);
        else
        {
            if(!root->right && !root->left)
            {
                root=NULL;
            }
            else
                if(root->left)
                {
                    root->val=inorderprecessor(root); //left thean right
                    root->left=deleteNode(root->left,root->val);
                    
                }
            else
            {
                root->val=inordersuccessor(root);//right than left
                root->right=deleteNode(root->right,root->val);
                
            }
        }
        return root;
    }
    int inordersuccessor(TreeNode* root)
    {
        
        root=root->right;
        while(root->left)
        {
            root=root->left;
        }
        return root->val;
    }
    int inorderprecessor(TreeNode* root)
    {
        
        root=root->left;
        while(root->right)
        {
             root=root->right;
        }
        return root->val;
        
    }
    
        
};