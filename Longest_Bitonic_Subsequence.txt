class Solution {
public:
    int minimumMountainRemovals(vector<int>& nums) 
    {
        vector<int> arr;
        arr=nums;
         int dp[arr.size()];
        if(count(arr.begin(),arr.end(),arr[0])==arr.size())
            return 0;
        int ans=0;
        dp[0]=1;
        int more=0;
        int flag=0,sum=0;
        for(int i=1;i<arr.size();i++)
        {
            int maxim=0;
            for(int j=0;j<i;j++)
            {
                if(arr[j]<arr[i])
                    maxim=max(dp[j],maxim);
            }
            dp[i]=maxim+1;
            more=max(more,dp[i]);
        }
          for(int i=0;i<arr.size();i++)
        {
            cout<<dp[i]<<" ";
        }
        cout<<"*****";
        // if(more==1)
        //     return  0;
        int dpb[arr.size()];
        int mores=0;
        for(int i=arr.size()-1;i>=0;i--)
        {
            int maxim=0;
            for(int j=arr.size()-1;j>i;j--)
            {
                if(arr[j]<arr[i])
                    maxim=max(dpb[j],maxim);
            }
            dpb[i]=maxim+1;
            mores=max(mores,dpb[i]);
        }
         for(int i=0;i<arr.size();i++)
        {
            cout<<dpb[i]<<" ";
        }
        
//         if(mores==1)
//             return 0;
      
       // cout<<"\n";
      
        cout<<"\n";
       
        int omax=0;
        for(int i=0;i<arr.size();i++)
        {
            if(dp[i]>1 && dpb[i]>1)
            omax=max(omax,dp[i]+dpb[i]-1);
        }
        return arr.size()-omax;
        
    }
};