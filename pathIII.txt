/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int pathSum(TreeNode* root, int targetSum)
    {
        if(root==NULL)
            return 0;
        
        int count=0;
        inorder(root,targetSum,count);
        return count;
    }
    void  solve(TreeNode* root,int targetSum,int &count)
    {
        if(root==NULL)
            return ;
        if(targetSum==root->val)
        {
            count++;
            if(root->left==NULL && root->right==NULL)
                return;
        }
        solve(root->left,targetSum-root->val,count);
        solve(root->right,targetSum-root->val,count);
    }
    void inorder(TreeNode* root,int targetSum,int &count)
    {
        if(root==NULL)
            return;
        inorder(root->left,targetSum,count);
        solve(root,targetSum,count);
        inorder(root->right,targetSum,count);
        return;
        
    }
};