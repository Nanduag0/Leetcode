	public:
	long long getCount(int N)
	{
		// Your code goes here
	  unordered_map<long long ,vector<long long >> mp;
	  mp.insert({1,{2,4,1}});
	  mp.insert({2,{1,3,5,2}});
	  mp.insert({3,{2,6,3}});
	  mp.insert({4,{1,5,7,4}});
	  mp.insert({5,{2,4,6,8,5}});
	  mp.insert({6,{3,5,9,6}});
	  mp.insert({7,{4,8,7}});
	  mp.insert({8,{5,7,9,0,8}});
	  mp.insert({9,{6,8,9}});
	  mp.insert({0,{8,0}});
	  long long dp[N+1][10];
	  memset(dp,0,sizeof(dp));
	  for(int i=0;i<10;i++)
	  {
	      dp[0][i]=0;
	  }
	  for(int i=0;i<10;i++)
	  {
	      dp[1][i]=1;
	  }
	  for(int i=2;i<=N;i++)
	  {
	      for(int j=0;j<10;j++)
	      {
	          auto it=mp.find(j);
	          vector<long long > vec=it->second;
	          for(int k=0;k<vec.size();k++)
	          {
	             dp[i][j]+=dp[i-1][vec[k]]; 
	          }
	      }
	  }
	  long long sum=0;
	  for(int i=0;i<=9;i++)
	  {
	      sum+=dp[N][i];
	  }
	  return sum;
	  
	}
};