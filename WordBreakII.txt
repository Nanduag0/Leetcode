class Solution {
public:
    vector<string> wordBreak(string s, vector<string>& wordDict)
    {
        string ans="";
        vector<string> vec;
        return  wordbreakcall(wordDict,s,ans,vec);
    }
     vector<string>  wordbreakcall(vector<string> wordDict,string s,string ans,vector<string> &vec)
    {
        
        if(s.length()==0)
        {
            ans.erase(ans.end()-1);
            vec.push_back(ans);
            return vec;
            
        }
        for(int i=0;i<s.length();i++)
        {
            string prefix=s.substr(0,i+1);
            if(find(wordDict.begin(),wordDict.end(),prefix)!=wordDict.end())
            {
                string right =s.substr(i+1);
                wordbreakcall(wordDict,right,ans+prefix+" ",vec);
                
            }
        }
        return vec;
        
    }  
};