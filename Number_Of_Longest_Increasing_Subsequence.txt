class Solution {
public:
    int findNumberOfLIS(vector<int>& nums) 
    {
        int dp[nums.size()];
        if(nums.size()<=1)
            return nums.size();
        memset(dp,1,sizeof(dp));
        if(count(nums.begin(),nums.end(),nums[0])==nums.size())
            return nums.size();
        vector<long long int > count(nums.size(),1);
        int oni=0;
        int ans=0;
        for(int i=1;i<nums.size();i++)
        {
            int maxim=0;
            for(int j=0;j<i;j++)
            {
                if(nums[j]<nums[i] && dp[i]<dp[j]+1)
                {
                   dp[i]=dp[j]+1;
                   count[i]=count[j];
                }
                else
                if(nums[j]<nums[i] && dp[i]==dp[j]+1)
                {
                    count[i]+=count[j];
                }
                   
              }
            ans=max(ans,dp[i]);
        }
        int cnt=0;
        for(int i=0;i<nums.size();i++)
        {
            if(dp[i]==ans)
            {
                 cnt+=count[i];
            }
        }
        return cnt;
    }
};