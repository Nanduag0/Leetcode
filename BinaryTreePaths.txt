/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    vector<string> ans;
    string s;
public:
    vector<string> binaryTreePaths(TreeNode* root)
    {
        if(root==NULL)
        {
            return ans;
        }
       dfs(root,s);
        return ans;
    }
    void dfs(TreeNode* root,string s)
    {
        if(root==NULL)
            return;
        if(root->right==NULL && root->left==NULL)
        {
         s+=to_string(root->val);
         ans.push_back(s);
         return ;
        }
        s+=to_string(root->val)+"->";
        dfs(root->left,s);
        dfs(root->right,s);
        return;
    }
    
};