#include <iostream>
using namespace std;
#include<bits/stdc++.h>
struct Node 
{
    int data;
    Node* left;
    Node* right;
   Node(int val)
{
    data=val;
    left=NULL;
    right=NULL;
}
};

 void  levelorder(Node* root)
{
    vector<vector<int>> ans;
    queue<Node*> que;
    que.push(root);
    while(!que.empty())
    {
        int x=que.size();
        vector<int> vs;
        while(x--)
        {
        Node *temp=que.front();
        vs.push_back(temp->data);
        que.pop();
        if(temp->left!=NULL)
        que.push(temp->left);
        if(temp->right!=NULL)
        que.push(temp->right);
        }
        ans.push_back(vs);
    }
    for(int  i=ans.size()-1;i>=0;i--)
    {
        for(int j=0;j<ans[i].size();j++)
        {
            cout<<ans[i][j]<<" ";
        }
        cout<<"\n";
    }
    
}
Node* insertvalue(queue<Node*> &que,Node *root,int x)
{
  Node* node=new Node(x);
  if(root==NULL)
  root=node;
  else
  if(que.front()->left==NULL)
  {
      que.front()->left=node;
  }
  else
  {
      que.front()->right=node;
      que.pop();
  }
  que.push(node);
  return root;
}

int main() 
{
    int n,val;
    cin>>n;
    vector<int> a(n);
    Node* root=NULL;
    queue<Node*> que;
    for(int i=0;i<n;i++)
    {
        cin>>val;
        a[i]=val;
        root=insertvalue(que,root,a[i]);
    }
    levelorder(root);
    return 0;
}
