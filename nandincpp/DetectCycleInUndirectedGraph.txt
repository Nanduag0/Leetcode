  bool dfs(int x,vector<bool> visited,int parent,vector<int> adj[])
	{
	    visited[x]=true;
	    vector<int> :: iterator itr;
	    for(itr=adj[x].begin();itr!=adj[x].end();itr++)
	    {
	        if(!visited[*itr])
	        {
	            if(dfs(*itr,visited,x,adj))
	            return true;
	        }
	        else
	        if(*itr!=parent)
	        return true;
	    }
	    return false;
	}
public:
	bool isCycle(int V, vector<int>adj[])
	{
	    // Code here
	 vector<bool> visited(V);
	 for(int i=0;i<visited.size();i++)
	 {
	     visited[i]=false;
	 }
	 for(int u=0;u<V;u++)
	 {
	     if(!visited[u])
	     {
	         if(dfs(u,visited,-1,adj))
	         {
	             return true;
	         }
	     }
	 }
	 return false;
	}
