class Solution {
public:
    int maxEnvelopes(vector<vector<int>>& envelopes) 
    {
        vector<pair<int,int>> vec;
        for(int i=0;i<envelopes.size();i++)
        {
            vec.push_back(make_pair(envelopes[i][0],envelopes[i][1]));
        }
        
        sort(vec.begin(),vec.end());
        
        //Now applying LIS;
        int ans=0;
        vector<int> dp(envelopes.size());
        for(int i=0;i<envelopes.size();i++)
        {
            int max=0;
            for(int j=0;j<i;j++)
            {
                if((vec[j].second<vec[i].second  && vec[j].first<vec[i].first))
                {
                    if(dp[j]>max)
                        max=dp[j];
                }
            }
            dp[i]=max+1;
            if(dp[i]>ans)
                ans=dp[i];
        }
        return ans;
       
       
    }
};