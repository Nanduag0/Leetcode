/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int rob(TreeNode* root) 
    {
        vector<int> n =findmax(root);
        return n[0]>n[1]?n[0]:n[1];
        
    }
     vector<int>  findmax(TreeNode* root)
    {
        if(root==NULL)
            return {0,0};
        vector<int> l=findmax(root->left);
        vector<int>  r=findmax(root->right);
        int withroot=root->val+l[1]+r[1];
        int withoutroot=(l[0]>l[1]?l[0]:l[1])+(r[0]>r[1]?r[0]:r[1]);
        return {withroot,withoutroot};
    }
};