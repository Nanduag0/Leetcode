/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    vector<string> vec;
    string s="";
public:
    string smallestFromLeaf(TreeNode* root)
    {
        dfs(root,s);
        sort(vec.begin(),vec.end());
        return vec[0];
        
    }
    void dfs(TreeNode* root,string s)
    {
        if(root==NULL)
            return ;
        if(root->left==NULL && root->right==NULL)
        {
            s+=(char)(root->val+'a');
            reverse(s.begin(),s.end());
            vec.push_back(s);
            return ;

        }
        s+=(char)(root->val+'a');
        dfs(root->left,s);
        dfs(root->right,s);
        
    }
};