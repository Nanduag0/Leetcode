	vector<int> bfsOfGraph(int V, vector<int> adj[]){
	    // Code here
	    vector<bool> visited(V);
	    vector<int> vec;
	    if(V==0)
	    return vec;
	    for(int i=0;i<V;i++)
	    {
	        visited[i]=false;
	    }
	    list<int> que;
	    que.push_back(0);
	    vector<int>::iterator itr;
	    visited[0]=true;
	    while(!que.empty())
	    {
	        int x=que.front();
	        vec.push_back(x);
	        que.pop_front();
	        for(itr = adj[x].begin();itr!=adj[x].end();itr++)
	    {
	        if(!visited[*itr])
	        {
	            visited[*itr]=true;
	            que.push_back(*itr);
	        }
	    }
	    }
	    return vec;
	}