/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedListToBST(ListNode* head) 
    {
      if(head==NULL)
      {
          TreeNode* temp=NULL;
          return temp;
      }
      ListNode* temp;
      temp=head;
      vector<int> vec;
      while(temp!=NULL)
      {
          vec.push_back(temp->val);
          temp=temp->next;
      }
      sort(vec.begin(),vec.end());
      return solve(vec,0,vec.size()-1);
    }
    TreeNode* solve(vector<int> vec,int l ,int u)
    {
        if(l>u)
        {
            return NULL;
        }
        int mid=l+(u-l)/2;
        TreeNode* temp=new TreeNode(vec[mid]);
        if(l==u)
            return temp;
        temp->left= solve(vec,l,mid-1);
        temp->right=solve(vec,mid+1,u);
        return temp;
        
    }
};